package com.example.testapp2.Activity;

import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;

import com.example.testapp2.Activity.Account.AccountActivity;
import com.example.testapp2.Activity.Account.SearchHistoryActivity;
import com.example.testapp2.Data.models.SearchHistoryItem;
import com.example.testapp2.R;
import com.example.testapp2.SearchViewModel;
import com.example.testapp2.databinding.ActivitySearchBinding;
import com.example.testapp2.utils.LocaleHelper;
import com.example.testapp2.utils.PhoneNumberFormattingTextWatcher;
import com.example.testapp2.utils.ThemeHelper;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;

public class Search extends AppCompatActivity {

    private SearchViewModel searchViewModel;
    private EditText phoneNumberInput;
    private TextView searchResult, categoryView, complaintsView, commentView;
    private TextView formatPhoneNum;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        ThemeHelper.applyTheme(this); // üëà –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –î–û super.onCreate
        super.onCreate(savedInstanceState);
        LocaleHelper.loadLocale(this); // Added locale loading
//        setContentView(R.layout.activity_search);
        ActivitySearchBinding binding = ActivitySearchBinding.inflate(getLayoutInflater());
        setContentView(binding.getRoot());
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–µ—Ä—Ö–Ω–∏–π —Ç—É–ª–±–∞—Ä
        Toolbar toolbar = findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        // –°–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        if (getSupportActionBar() != null) {
            getSupportActionBar().setDisplayHomeAsUpEnabled(false);
            getSupportActionBar().setHomeButtonEnabled(false);
        }

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            phoneNumberInput = findViewById(R.id.phone_number_input);
            Button searchButton = findViewById(R.id.check_button);
            searchResult = findViewById(R.id.result_view);
            categoryView = findViewById(R.id.category_view);
            complaintsView = findViewById(R.id.complaints_view);
            commentView = findViewById(R.id.comment_view);


            phoneNumberInput.addTextChangedListener(new PhoneNumberFormattingTextWatcher());

            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ViewModel
            searchViewModel = new SearchViewModel(this);

            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–µ–≥–æ –∏–Ω—Ç–µ–Ω—Ç–∞ –æ—Ç –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞
        Intent intent = getIntent();
        if (intent != null && intent.hasExtra("SELECTED_PHONE_NUMBER")) {
            String selectedPhoneNumber = intent.getStringExtra("SELECTED_PHONE_NUMBER");
            phoneNumberInput.setText(selectedPhoneNumber);
            // –ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º –∫–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –ø–æ–∏—Å–∫–∞,
            // —á—Ç–æ–±—ã –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∏—Å–∫ —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º
            if (searchButton != null) { // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∫–Ω–æ–ø–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞
                searchButton.performClick();
            }
        }

            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–æ–∏—Å–∫–∞
        searchButton.setOnClickListener(v -> {
            String phoneNumber = phoneNumberInput.getText().toString().trim();
            if (TextUtils.isEmpty(phoneNumber)) {
                searchResult.setText("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä!");
                return;
            }

            // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫ –Ω–æ–º–µ—Ä–∞
            searchViewModel.searchPhoneNumber(phoneNumber);

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
//            FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();
//            if (user != null) {
//                String uid = user.getUid();
//                DatabaseReference ref = FirebaseDatabase.getInstance()
//                        .getReference("search_history")
//                        .child(uid);
//
//                String key = ref.push().getKey(); // —Å–æ–∑–¥–∞—ë–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á
//                if (key != null) {
//                    SearchHistoryItem item = new SearchHistoryItem(phoneNumber, System.currentTimeMillis());
//                    ref.child(key).setValue(item);
//                }
//            }
        });

            // –ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ LiveData
            searchViewModel.getSearchResult().observe(this, scamInfo -> {
                if (scamInfo != null) {
                    // –ü–æ–∫–∞–∑–∞—Ç—å TextView, –µ—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞–π–¥–µ–Ω
                    categoryView.setVisibility(View.VISIBLE);
                    complaintsView.setVisibility(View.VISIBLE);
                    commentView.setVisibility(View.VISIBLE);
                    searchResult.setVisibility(View.VISIBLE);

                    categoryView.setText("–ö–∞—Ç–µ–≥–æ—Ä–∏—è: " + scamInfo.getCategory());
                    complaintsView.setText("–ö–æ–ª-–≤–æ –∂–∞–ª–æ–±: " + scamInfo.getComplaints());
                    commentView.setText("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + scamInfo.getComment());
                    searchResult.setText("–í–Ω–∏–º–∞–Ω–∏–µ!\n" +"\n" + "–ù–æ–º–µ—Ä –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –±–∞–∑–µ, –≤–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –º–æ—à–µ–Ω–Ω–∏–∫–∏.");

                    searchResult.setBackgroundResource(R.drawable.red_border);
                } else {
                    // –°–∫—Ä—ã—Ç—å TextView, –µ—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞–π–¥–µ–Ω
                    categoryView.setVisibility(View.GONE);
                    complaintsView.setVisibility(View.GONE);
                    commentView.setVisibility(View.GONE);
                    searchResult.setVisibility(View.VISIBLE);

                    searchResult.setText("–ù–æ–º–µ—Ä –≤ –±–∞–∑–µ –æ—Ç—Å—É—Ç—Å–≤—É–µ—Ç.");
                    searchResult.setBackgroundResource(R.drawable.green_border);
                }
            });
            // –ü–µ—Ä–µ—Ö–æ–¥ –ø–æ –∫–Ω–æ–ø–∫–∞–º –≤ –Ω–∏–∂–Ω–µ–º —Ç—É–ª–±–∞—Ä–µ
            BottomNavigationView bottomNavigationView = findViewById(R.id.bottom_navigation);
            // Set Home selected
            bottomNavigationView.setSelectedItemId(R.id.nav_search);
            bottomNavigationView.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener() {
                @Override
                public boolean onNavigationItemSelected(@NonNull MenuItem item) {

                    int id = item.getItemId();

                    if (id == R.id.nav_learn) {
                        startActivity(new Intent(getApplicationContext(), Learn.class));
                        overridePendingTransition(0, 0);
                        return true;
                    } else if (id == R.id.nav_search) {
                        return true;
                    } else if (id == R.id.nav_settings) {
                        startActivity(new Intent(getApplicationContext(), Settings.class));
                        overridePendingTransition(0, 0);
                        return true;
                    } else if (id == R.id.nav_history) {
                        startActivity(new Intent(getApplicationContext(), SearchHistoryActivity.class));
                        overridePendingTransition(0, 0);
                        return true;
                    } else if (id == R.id.nav_home) {
                        startActivity(new Intent(getApplicationContext(), MainActivity.class));
                        overridePendingTransition(0, 0);
                        return true;
                    }
                    return false;
                }
            });
        }
        // –î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –ø–æ –∏–∫–æ–Ω–∫–µ –∞–∫–∫–∞—É–Ω—Ç–∞
        @Override
        public boolean onCreateOptionsMenu (Menu menu){
            getMenuInflater().inflate(R.menu.up_toolbar_menu, menu);
            return true;
        }
        @Override
        public boolean onOptionsItemSelected (@NonNull MenuItem item){
            if (item.getItemId() == R.id.nav_accoutn) {
                startActivity(new Intent(getApplicationContext(), AccountActivity.class));
                overridePendingTransition(0, 0);
                return true;
            }
            return super.onOptionsItemSelected(item);
        }

}
